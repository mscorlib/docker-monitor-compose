version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  #promethues, alter and push service
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
  
  alert-manager:
    image: prom/alertmanager:v0.24.0
    container_name: alert-manager
    restart: unless-stopped
    volumes:
      - ./alert-manager:/etc/alert-manager
    command:
      - '--config.file=/etc/alert-manager/config.yml'
      - '--storage.path=/etc/alert-manager/store'
    expose:
      - 9093
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
  
  push-gateway:
    image: prom/pushgateway:v1.4.3
    container_name: push-gateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  #grafana dashboard
  grafana:
    image: grafana/grafana:7.5.17
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:  
      - prometheus
    expose:
      - 3000
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
  
  #export as a web service by caddy
  caddy:
    image: caddy:2.6.1-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
  
  #node & container monitoring
  cadvisor:
    image: zcube/cadvisor:v0.45.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      # - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitoring
    deploy:
      mode: global
    labels:
      org.label-schema.group: "monitoring"
  
  node-exporter:
    image: prom/node-exporter:v1.4.0
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring
    deploy:
      mode: global
    labels:
      org.label-schema.group: "monitoring"