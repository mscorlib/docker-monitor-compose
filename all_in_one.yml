version: '3.8'

networks:
  dev_monitoring:
    external: true
  dev_springcloud:
    external: true

volumes:
  prometheus_data:
    external: true
  grafana_data: 
    external: true
  pgsql_data:
    external: true
  pgadmin_data:
    external: true

services:
  #promethues, alter and push service
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - dev_monitoring
    labels:
      org.label-schema.group: "monitoring"

  alert-manager:
    image: prom/alertmanager:${ALERTMANAGER_VERSION}
    container_name: alert-manager
    restart: unless-stopped
    volumes:
      - ./alert-manager:/etc/alert-manager
    command:
      - '--config.file=/etc/alert-manager/config.yml'
      - '--storage.path=/etc/alert-manager/store'
    expose:
      - 9093
    networks:
      - dev_monitoring
    labels:
      org.label-schema.group: "monitoring"

  push-gateway:
    image: prom/pushgateway:${PUSHGATEWAY_VERSION}
    container_name: push-gateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - dev_monitoring
    labels:
      org.label-schema.group: "monitoring"

  #grafana dashboard
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    expose:
      - 3000
    networks:
      - dev_monitoring
    labels:
      org.label-schema.group: "monitoring"

  nacos:
    image: nacos/nacos-server:${NACOS_VERSION}
    container_name: nacos
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
    volumes:
      - ./nacos/standalone-logs/:/home/nacos/logs
      - ./nacos/application.properties:/home/nacos/conf/application.properties
    expose:
      - 8848
      - 9848
    networks:
      - dev_springcloud
  
  seata-server:
    image: seataio/seata-server:${SEATA_SERVER_VERSION}
    container_name: seata
    expose:
      - 8091
      - 7091
    environment:
      - SEATA_PORT=8091
      - STORE_MODE=file
    networks:
      - dev_springcloud
  
  pgsql:
    image: postgres:${POSTGRES_VERSION}
    container_name: pgsql
    restart: always
    volumes:
      - pgsql_data:/var/lib/postgresql/data
    networks:
      - dev_springcloud
    expose:
     - 5432
    environment:
      POSTGRES_PASSWORD: 123123

  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION}
    container_name: pgadmin4
    restart: always
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - dev_springcloud
    environment:
      PGADMIN_DEFAULT_EMAIL: mscorlib@live.com
      PGADMIN_DEFAULT_PASSWORD: admin
    expose:
      - 8080

  #export as a web service by caddy
  caddy:
    image: caddy:${CADDY_VERSION}
    container_name: caddy
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9090:9090"
      # - "9093:9093"
      # - "9091:9091"
      - "8848:8848"
      - "8091:8091"
      - "5432:5432"
    volumes:
      - ./caddy:/etc/caddy
    networks:
      - dev_monitoring
      - dev_springcloud

  #node & container monitoring
  cadvisor:
    image: zcube/cadvisor:${CADVISOR_VERSION}
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      # - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - dev_monitoring
    deploy:
      mode: global
    labels:
      org.label-schema.group: "monitoring"

  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_VERSION}
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - dev_monitoring
    deploy:
      mode: global
    labels:
      org.label-schema.group: "monitoring"
